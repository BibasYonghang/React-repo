{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\web-development\\\\react\\\\my-app\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [mode, setMode] = useState('light'); // wheather dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode == 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze below\",\n        mode: mode,\n        style: {\n          color: props.mode === 'white' ? 'dark' : 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","_s","mode","setMode","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","color","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/web-development/react/my-app/src/app.js"],"sourcesContent":["\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n// import About from './components/About';\r\nimport React, { useState } from 'react'\r\n\r\nfunction App(props) {\r\n  const [mode, setMode] = useState('light') // wheather dark mode is enabled or not\r\n\r\n  const toggleMode = () => {\r\n    if (mode == 'light') {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = 'grey'\r\n    } else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Navbar title=\"TextUtils\" about=\"aboutTextUtils\" /> */}\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n      <div className=\"container my-3\">\r\n        <TextForm heading='Enter the text to analyze below' mode={mode} style={{ color: props.mode === 'white'? 'dark': 'white'}} />\r\n        {/* <About/> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,EAAC;;EAE1C,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,IAAI,IAAI,OAAO,EAAE;MACnBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;IAC9C,CAAC,MAAM;MACLL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBAEEb,OAAA,CAACL,MAAM;MAACmB,KAAK,EAAC,WAAW;MAACR,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChElB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC7Bb,OAAA,CAACJ,QAAQ;QAACwB,OAAO,EAAC,iCAAiC;QAACd,IAAI,EAAEA,IAAK;QAACK,KAAK,EAAE;UAAEU,KAAK,EAAEjB,KAAK,CAACE,IAAI,KAAK,OAAO,GAAE,MAAM,GAAE;QAAO;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzH,CAAC;EAAA,eACN,CAAC;AAEP;AAACb,EAAA,CAvBQF,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}